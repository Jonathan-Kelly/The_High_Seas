
#define THS_SHIP SIDE ID NAME TYPE X Y

    {VARIABLE  rig_Outrigger 10}
    {VARIABLE  ram_Outrigger  2}
    {VARIABLE hold_Outrigger  4}

    {VARIABLE  rig_Corsair 4}
    {VARIABLE  ram_Corsair 1}
    {VARIABLE hold_Corsair 6}

    {VARIABLE  rig_Warship  2}
    {VARIABLE  ram_Warship  1}
    {VARIABLE hold_Warship 12}

    {VARIABLE  rig_Submarine 12}
    {VARIABLE  ram_Submarine  4}
    {VARIABLE hold_Submarine 12}

    [unit]
        side={SIDE}
        type={TYPE}
        id={ID}
        name={NAME}
        role=ship
        x,y={X},{Y}
        [variables]
            rig=$rig_{TYPE}
            ram=$ram_{TYPE}
            hold=$hold_{TYPE}
            rum=$($hold_{TYPE}/2)
            jewels=$($hold_{TYPE}/2)
            spices=$($hold_{TYPE}/2)
        [/variables]
    [/unit]

    # Refresh the deckside cargo manifest.
    {THS_REFRESH_CARGO_LABELS {ID}}

    # Capture any deckside "sick bay" villages.
    {CAPTURE_VILLAGES {SIDE} $deck_x_{ID} $deck_y_{ID} 0}

    # Ship To Shore Landing Tunnel
    # Allows crew to travel between the deck and terrain near the ship.
    [event]
        name=moveto
        first_time_only=no
        [filter]
            id={ID}
        [/filter]
        # Remove the old tunnel.
        [tunnel]
            id=landing_{ID}
            remove=yes
        [/tunnel]
        # Create a new tunnel to the area nearby the new ship location.
        [tunnel]
            id=landing_{ID}
            [filter]
                [not]
                    race=mechanical,monster
                [/not]
            [/filter]
            [source]
                x,y=$deck_x_{ID},$deck_y_{ID}
                terrain=W*
            [/source]
            [target]
                x,y=$unit.x,$unit.y
                radius=1
            [/target]
            delayed_variable_substitution=no
        [/tunnel]
        [redraw]
            clear_shroud=yes
        [/redraw]
    [/event]
    # If the ship sinks then remove this tunnel.
    [event]
        name=die
        first_time_only=no
        [filter]
            id={ID}
        [/filter]
        [tunnel]
            id=landing_{ID}
            remove=yes
        [/tunnel]
    [/event]
    # Initialize this tunnel.
    [fire_event]
        name=moveto
        [primary_unit]
            id={ID}
        [/primary_unit]
    [/fire_event]

    # Ship To Ship Boarding Tunnel
    # Allows travel from this deck to that of an adjacent ship.
    [event]
        name=moveto
        first_time_only=no
        [filter]
            id={ID}
        [/filter]
        # If the ship has moved to and/or away from any other ships then refresh this and their boarding tunnels.
        [if]
            [have_unit]
                [filter_location]
                    x,y="$x1,$x2","$y1,$y2"
                    radius=1
                [/filter_location]
                role=ship
                count=2-14
            [/have_unit]
            [then]
                [store_locations]
                    variable=area
                    x,y="$x1,$x2","$y1,$y2"
                    radius=1
                [/store_locations]
                {REFRESH_BOARDING_TUNNEL area null}
                [redraw]
                    clear_shroud=yes
                [/redraw]
            [/then]
        [/if]
    [/event]
    # If the ship sinks then remove this boarding tunnel and tell nearby ships to refresh theirs.
    [event]
        name=die
        first_time_only=no
        [filter]
            id={ID}
        [/filter]
        [store_locations]
            variable=area
            x,y=$x1,$y1
            radius=1
        [/store_locations]
        {REFRESH_BOARDING_TUNNEL area {ID}}
        [tunnel]
            id=boarding_{ID}
            remove=yes
        [/tunnel]
    [/event]
#enddef

#define REFRESH_BOARDING_TUNNEL AREA SUNK
    [store_unit]
        variable=ships
        [filter]
            [filter_location]
                find_in={AREA}
            [/filter_location]
            role=ship
            [not]
                id={SUNK}
            [/not]
        [/filter]
    [/store_unit]
    [foreach]
        array=ships
        [do]
            [store_unit]
                variable=adjacent_ships
                [filter]
                    [filter_adjacent]
                        id=$this_item.id
                    [/filter_adjacent]
                    role=ship
                    [not]
                        id={SUNK}
                    [/not]
                [/filter]
            [/store_unit]
            [foreach]
                array=adjacent_ships
                [do]
                    [set_variables]
                        name=decks
                        mode=append
                        [value]
                            x,y=$deck_x_$this_item.id,$deck_y_$this_item.id
                        [/value]
                    [/set_variables]
                [/do]
            [/foreach]
            [set_variable]
                name=decks_x
                [join]
                    variable=decks
                    key=x
                    separator=","
                [/join]
            [/set_variable]
            [set_variable]
                name=decks_y
                [join]
                    variable=decks
                    key=y
                    separator=","
                [/join]
            [/set_variable]
            # Remove the old tunnel.
            [tunnel]
                id=boarding_$this_item.id
                remove=yes
            [/tunnel]
            # Create a new tunnel from this deck to those of any now adjacent ships.
            [tunnel]
                id=boarding_$this_item.id
                [filter]
                    [not]
                        race=mechanical,monster
                    [/not]
                [/filter]
                [source]
                    x,y=$deck_x_$this_item.id,$deck_y_$this_item.id
                    terrain=W*
                [/source]
                [target]
                    x,y=$decks_x,$decks_y
                    terrain=W*
                [/target]
                bidirectional=no
                delayed_variable_substitution=no
            [/tunnel]
            {CLEAR_VARIABLE decks}
            {CLEAR_VARIABLE decks_x}
            {CLEAR_VARIABLE decks_y}
        [/do]
    [/foreach]
#enddef

#define THS_CREW_INJURY
    # Deck crew injuries from hits to the ship.
    [event]
        name=attacker hits
        first_time_only=no
        [filter_second]
            role=ship
        [/filter_second]
        [random_placement]
            num_items=1
            variable=hit
            [filter_location]
                x,y=$deck_x_$second_unit.id,$deck_y_$second_unit.id
            [/filter_location]
            [command]
                [harm_unit]
                    [filter]
                        [filter_location]
                            find_in=hit
                            radius=1
                        [/filter_location]
                    [/filter]
                    amount=$weapon.damage
                    damage_type=$weapon.type
                    fire_event=yes
                    animate=yes
                [/harm_unit]
            [/command]
        [/random_placement]
    [/event]
    [event]
        name=defender hits
        first_time_only=no
        [filter]
            role=ship
        [/filter]
        [random_placement]
            num_items=1
            variable=hit
            [filter_location]
                x,y=$deck_x_$unit.id,$deck_y_$unit.id
            [/filter_location]
            [command]
                [harm_unit]
                    [filter]
                        [filter_location]
                            find_in=hit
                            radius=1
                        [/filter_location]
                    [/filter]
                    amount=$second_weapon.damage
                    damage_type=$second_weapon.type
                    fire_event=yes
                    animate=yes
                [/harm_unit]
            [/command]
        [/random_placement]
    [/event]

    # The ship is sinking.
    [event]
        name=die
        first_time_only=no
        [filter]
            role=ship
        [/filter]
        # Everyone on deck goes down with the ship.
        [kill]
            x=$deck_x_$unit.id
            y=$deck_y_$unit.id
        [/kill]
        # The sick bay "villages" are lost.
        {CAPTURE_VILLAGES 0 $deck_x_$unit.id $deck_y_$unit.id 0}
        # Art
        [sound]
            name=water-blast.wav
        [/sound]
        {PLACE_IMAGE scenery/wreck.png $x1 $y1}
        [print]
            text= _ "The $unit.name has sunk!"
            size=24
            duration=3000
        [/print]
    [/event]
#enddef

# Deck

#define THS_DECK SHIP X Y
    {VARIABLE deck_x_{SHIP} {X}}
    {VARIABLE deck_y_{SHIP} {Y}}
#enddef

# Deckside Crew Posts

#define THS_REFRESH_CREW SHIP LAG_GUNNER LAG_RIGGER
    [store_unit]
        variable=ship
        [filter]
            id={SHIP}
        [/filter]
    [/store_unit]
    # Active Gunners
    [store_unit]
        variable=gunners
        [filter]
            side=$ship.side
            x,y=$cannons_x_{SHIP},$cannons_y_{SHIP}
        [/filter]
    [/store_unit]
    {VARIABLE attacks $gunners.length}
    {VARIABLE_OP attacks add {LAG_GUNNER}}
    [object]
        silent=yes
        duration=forever
        delayed_variable_substitution=no
        [filter]
            id={SHIP}
        [/filter]
        [effect]
            apply_to=attack
            name=cannon
            set_attacks=$attacks
        [/effect]
    [/object]
    # Active Riggers
    [store_unit]
        variable=riggers
        [filter]
            side=$ship.side
            x,y=$rigging_x_{SHIP},$rigging_y_{SHIP}
        [/filter]
    [/store_unit]
    {VARIABLE moves $riggers.length}
    {VARIABLE_OP moves add {LAG_RIGGER}}
    {VARIABLE_OP moves multiply $ship.variables.rig}
    {VARIABLE ram $moves}
    {VARIABLE_OP ram multiply $ship.variables.ram}
    [object]
        silent=yes
        duration=forever
        delayed_variable_substitution=no
        [filter]
            id={SHIP}
        [/filter]
        [effect]
            apply_to=movement
            set=$moves
        [/effect]
        [effect]
            apply_to=attack
            name=ram
            set_damage=$ram
        [/effect]
    [/object]
#enddef

#define THS_CANNONS SHIP X Y
    {VARIABLE cannons_x_{SHIP} {X}}
    {VARIABLE cannons_y_{SHIP} {Y}}
    [event]
        name=enter_hex
        first_time_only=no
        [filter]
            x,y={X},{Y}
            [filter_side]
                [has_unit]
                    id={SHIP}
                [/has_unit]
            [/filter_side]
        [/filter]
        {THS_REFRESH_CREW {SHIP} 0 0}
    [/event]
    [event]
        name=exit_hex, die
        first_time_only=no
        [filter]
            x,y={X},{Y}
            [filter_side]
                [has_unit]
                    id={SHIP}
                [/has_unit]
            [/filter_side]
        [/filter]
        # A unit just passing through this hex still fires exit_hex, so make sure no one else is at this post.
        [if]
            [not]
                [have_unit]
                    x,y=$x1,$y1
                    [not]
                        id=$unit.id
                    [/not]
                [/have_unit]
            [/not]
            [then]
                {THS_REFRESH_CREW {SHIP} -1 0} # The -1 compensates for the exit_hex and die events firing before the crewman unit is gone.
            [/then]
        [/if]
    [/event]
    # Art
    {PLACE_IMAGE scenery/slab1.png {X} {Y}}
    {SET_LABEL {X} {Y} "cannon"}
    [event]
        name=moveto
        first_time_only=no
        [filter]
            x,y={X},{Y}
            [filter_side]
                [has_unit]
                    id={SHIP}
                [/has_unit]
            [/filter_side]
        [/filter]
        [floating_text]
            x,y=$x1,$y1
            text="<span color='white'>Cannon Manned</span>"
        [/floating_text]
    [/event]
#enddef

#define THS_RIGGING SHIP X Y
    {VARIABLE rigging_x_{SHIP} {X}}
    {VARIABLE rigging_y_{SHIP} {Y}}
    [event]
        name=enter_hex
        first_time_only=no
        [filter]
            x,y={X},{Y}
            [filter_side]
                [has_unit]
                    id={SHIP}
                [/has_unit]
            [/filter_side]
        [/filter]
        {THS_REFRESH_CREW {SHIP} 0 0}
    [/event]
    [event]
        name=exit_hex, die
        first_time_only=no
        [filter]
            x,y={X},{Y}
            [filter_side]
                [has_unit]
                    id={SHIP}
                [/has_unit]
            [/filter_side]
        [/filter]
        # A unit just passing through this hex still fires exit_hex, so make sure no one else is at this post.
        [if]
            [not]
                [have_unit]
                    x,y=$x1,$y1
                    [not]
                        id=$unit.id
                    [/not]
                [/have_unit]
            [/not]
            [then]
                {THS_REFRESH_CREW {SHIP} 0 -1} # The -1 compensates for the exit_hex and die events firing before the crewman unit is gone.
            [/then]
        [/if]
    [/event]
    # Art
    {PLACE_IMAGE scenery/signpost.png {X} {Y}}
    {SET_LABEL {X} {Y} "rigging"}
    [event]
        name=moveto
        first_time_only=no
        [filter]
            x,y={X},{Y}
            [filter_side]
                [has_unit]
                    id={SHIP}
                [/has_unit]
            [/filter_side]
        [/filter]
        [floating_text]
            x,y=$x1,$y1
            text="<span color='white'>Rigging Manned</span>"
        [/floating_text]
    [/event]
#enddef

#define THS_HELM SHIP X Y
    {VARIABLE helm_x_{SHIP} {X}}
    {VARIABLE helm_y_{SHIP} {Y}}
    # Capture
    [event]
        name=enter_hex
        first_time_only=no
        [filter]
            x,y={X},{Y}
        [/filter]
        [modify_unit]
            [filter]
                id={SHIP}
            [/filter]
            side=$unit.side
        [/modify_unit]
        {THS_REFRESH_CREW {SHIP} 0 0}
    [/event]
    # Dereliction
    [event]
        name=exit_hex, die
        first_time_only=no
        [filter]
            x,y={X},{Y}
        [/filter]
        # A unit just passing through this hex still fires exit_hex, so make sure no one else is at this post.
        [if]
            [not]
                [have_unit]
                    x,y=$x1,$y1
                    [not]
                        id=$unit.id
                    [/not]
                [/have_unit]
            [/not]
            # There no one manning the rudder, the ship is adrift.
            [then]
                [modify_unit]
                    [filter]
                        id={SHIP}
                    [/filter]
                    # The derelicts side under idle_ai control.
                    side=10
                [/modify_unit]
                [floating_text]
                    x,y=$x1,$y1
                    text="<span color='white'>Ship Adrift</span>"
                [/floating_text]
            [/then]
        [/if]
    [/event]
    # Art
    {PLACE_IMAGE scenery/leanto.png {X} {Y}}
    {SET_LABEL {X} {Y} "helm"}
    # Helm Manned Text
    [event]
        name=moveto
        first_time_only=no
        [filter]
            x,y={X},{Y}
            [filter_side]
                [has_unit]
                    id={SHIP}
                [/has_unit]
            [/filter_side]
        [/filter]
        [floating_text]
            x,y=$x1,$y1
            text="<span color='white'>Helm Manned</span>"
        [/floating_text]
    [/event]
    # Ship Captured Text
    [event]
        name=moveto
        first_time_only=no
        [filter]
            x,y={X},{Y}
            [filter_side]
                [not]
                    [has_unit]
                        id={SHIP}
                    [/has_unit]
                [/not]
            [/filter_side]
        [/filter]
        [floating_text]
            x,y=$x1,$y1
            text="<span color='white'>Ship Captured</span>"
        [/floating_text]
    [/event]
#enddef

# Deckside Cargo

#define THS_CARGO SHIP RUM_X RUM_Y JEWELS_X JEWELS_Y SPICES_X SPICES_Y
    {VARIABLE rum_x_{SHIP} {RUM_X}}
    {VARIABLE rum_y_{SHIP} {RUM_Y}}
    {VARIABLE jewels_x_{SHIP} {JEWELS_X}}
    {VARIABLE jewels_y_{SHIP} {JEWELS_Y}}
    {VARIABLE spices_x_{SHIP} {SPICES_X}}
    {VARIABLE spices_y_{SHIP} {SPICES_Y}}
    {PLACE_IMAGE items/barrel.png {RUM_X} {RUM_Y}}
    {PLACE_IMAGE items/chest.png {JEWELS_X} {JEWELS_Y}}
    {PLACE_IMAGE items/ornate2.png {SPICES_X} {SPICES_Y}}
#enddef

#define THS_REFRESH_CARGO_LABELS SHIP
    [store_unit]
        [filter]
            id={SHIP}
        [/filter]
        variable=ship
    [/store_unit]
    {SET_LABEL    $rum_x_{SHIP}    $rum_y_{SHIP}    "Rum: $ship.variables.rum/$ship.variables.hold"}
    {SET_LABEL $jewels_x_{SHIP} $jewels_y_{SHIP} "Jewels: $ship.variables.jewels/$ship.variables.hold"}
    {SET_LABEL $spices_x_{SHIP} $spices_y_{SHIP} "Spices: $ship.variables.spices/$ship.variables.hold"}
#enddef
